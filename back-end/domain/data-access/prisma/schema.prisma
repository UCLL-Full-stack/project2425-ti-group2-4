generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Patient {
  id               Int            @id @default(autoincrement())
  name             String
  sex              String
  dateOfBirth      DateTime
  address          String
  email            String
  complaints       String[]
  nationalRegister String
  age              Int
  userId           Int            @unique
  consultations    Consultation[]
  user             User           @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Doctor {
  id             Int            @id @default(autoincrement())
  name           String
  email          String
  specialisation String
  userId         Int            @unique
  user           User           @relation(fields: [userId], references: [id], onDelete: Cascade)  // Add onDelete: Cascade
  consultations  Consultation[] @relation("ConsultationToDoctor")
  offices        Office[]       @relation("DoctorToOffice")
}

model Office {
  id           Int        @id @default(autoincrement())
  name         String
  address      String
  email        String
  phoneNumber  Int
  openingHours OpeningHour[]
  doctors      Doctor[]   @relation("DoctorToOffice")
}

model OpeningHour {
  id        Int     @id @default(autoincrement())
  day       String  
  openTime  String 
  closeTime String 
  officeId  Int
  office    Office  @relation(fields: [officeId], references: [id])
}

model Consultation {
  id        Int      @id @default(autoincrement())
  startDate DateTime
  endDate   DateTime
  name      String
  patientId Int
  patient   Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)
  doctors   Doctor[] @relation("ConsultationToDoctor")
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  password String
  role     String
  doctor   Doctor?
  patient  Patient?
}

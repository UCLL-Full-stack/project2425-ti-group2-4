generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Patient {
  id               Int            @id @default(autoincrement())
  name             String
  sex              String
  dateOfBirth      DateTime
  age              Int
  address          String
  email            String
  nationalRegister String
  complaints       Complaint[] // Relation to Complaint model
  photoUrl         String?      // Add this if it's optional
  medicalAlerts    MedicalAlert[] // Relation to MedicalAlert model
  consultations    Consultation[]
  insurance        Insurance?
}

model Complaint {
  id          Int     @id @default(autoincrement())
  description String
  patientId   Int
  Patient     Patient @relation(fields: [patientId], references: [id])
}

model MedicalAlert {
  id        Int     @id @default(autoincrement())
  alert     String
  patientId Int
  Patient   Patient @relation(fields: [patientId], references: [id])
}

model Office {
  id           Int           @id @default(autoincrement())
  name         String
  address      String
  email        String
  openingHours OpeningHour[] // New model for opening hours
  phoneNumber  Int
  doctors      Doctor[]
}

model OpeningHour {
  id        Int      @id @default(autoincrement())
  dayOfWeek String // Example: "Monday"
  startTime DateTime
  endTime   DateTime
  officeId  Int
  Office    Office   @relation(fields: [officeId], references: [id])
}

model Doctor {
  id             Int            @id @default(autoincrement())
  name           String
  email          String
  specialisation String
  offices        Office[]
  consultations  Consultation[] @relation("DoctorConsultations")
}

model Consultation {
  id         Int      @id @default(autoincrement())
  datetime   DateTime
  provider   String
  patientId  Int
  Patient    Patient  @relation(fields: [patientId], references: [id])
  @@index([patientId])
  doctorId  Int
  Doctor    Doctor   @relation(fields: [doctorId], references: [id], name: "DoctorConsultations")
}

model Insurance {
  id        Int     @id @default(autoincrement())
  primary   String
  secondary String?
  patientId Int     @unique
  Patient   Patient @relation(fields: [patientId], references: [id])
}
